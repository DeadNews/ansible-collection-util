---
# Setup Wireguard

- name: Check distribution compatibility
  ansible.builtin.assert:
    that:
      - ansible_os_family is defined
      - ansible_os_family == 'Debian'

- name: Install Wireguard
  ansible.builtin.apt:
    name:
      - wireguard
      - iptables
    state: present
    cache_valid_time: 7200 # 2h

- name: Create Wireguard config — {{ wireguard_interface }}
  ansible.builtin.template:
    src: "{{ wireguard_template }}"
    dest: /etc/wireguard/{{ wireguard_interface }}.conf
    owner: root
    group: root
    mode: "0600"
    validate: wg-quick strip %s
  notify: (Handler) Restart Wireguard service

- name: Enable and persist ip forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    sysctl_set: true
    reload: true
  when:
    - wireguard_ip_forward is defined
    - wireguard_ip_forward

- name: Flush handlers after deployment
  ansible.builtin.meta: flush_handlers

- name: Show Wireguard status — {{ wireguard_interface }}
  ansible.builtin.command:
    cmd: systemctl status wg-quick@{{ wireguard_interface }}.service
  changed_when: false
  register: wireguard_status

- name: Debug Wireguard status — {{ wireguard_interface }}
  ansible.builtin.debug:
    var: wireguard_status

- name: Ensure that Wireguard is started — {{ wireguard_interface }}
  ansible.builtin.systemd:
    name: wg-quick@{{ wireguard_interface }}.service
    enabled: true
    state: started

- name: Display debug information
  ansible.builtin.include_role:
    name: deadnews.util.wireguard
    tasks_from: debug
  when:
    - wireguard_debug is defined
    - wireguard_debug
