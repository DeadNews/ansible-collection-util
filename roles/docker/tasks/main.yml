---
# Install Docker on Debian-family OS

- name: Check distribution compatibility
  ansible.builtin.assert:
    that:
      - ansible_os_family == 'Debian'

- name: Ensure the deb822_repository module requirements is installed
  ansible.builtin.apt:
    name: python3-debian
    state: present
    cache_valid_time: 3600 # 1h

- name: Add Docker repository
  ansible.builtin.deb822_repository:
    name: docker
    types: [deb]
    architectures: amd64
    uris: https://download.docker.com/linux/{{ ansible_distribution | lower }}
    signed_by: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    suites: ["{{ ansible_distribution_release | lower }}"]
    components: [stable]
    state: present

- name: Uninstall Distro maintaine distributions of Docker
  ansible.builtin.apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - podman-docker
      - containerd
    state: absent
    autoremove: false

- name: Set Docker packages list
  ansible.builtin.set_fact:
    docker_pkgs:
      - containerd.io
      - docker-buildx-plugin
      - docker-ce
      - docker-ce-cli
      - docker-ce-rootless-extras
      - docker-compose-plugin

- name: Install Docker packages
  ansible.builtin.apt:
    name: "{{ docker_pkgs }}"
    state: latest
    update_cache: true
    allow_change_held_packages: true

- name: Hold Docker packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items: "{{ docker_pkgs }}"
  when:
    - docker_hold_packages is defined
    - docker_hold_packages

- name: Install Docker in rootfull mode
  ansible.builtin.include_role:
    name: docker
    tasks_from: rootfull
  when:
    - docker_rootless is defined
    - not docker_rootless

- name: Install Docker in rootless mode
  ansible.builtin.include_role:
    name: docker
    tasks_from: rootless
  when:
    - docker_rootless is defined
    - docker_rootless
